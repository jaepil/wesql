# Wait for at least 1 snapshots to be generated 
CREATE DATABASE db1;
CREATE TABLE t1(c1 int) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1);
INSERT INTO t1 values(2);
INSERT INTO t1 values(3);
INSERT INTO t1 values(4);
SELECT * FROM t1;
c1
1
2
3
4
# Wait for at least 2 snapshots to be generated 
# Select SNAPSHOT_INNODB_PERSISTENT_SNAPSHOT_INDEX
SELECT IF(RIGHT(INNODB_SNAPSHOT_NAME, 1) = '/', SUBSTRING_INDEX(SUBSTRING_INDEX(INNODB_SNAPSHOT_NAME, '/', -2), '/', 1), SUBSTRING_INDEX(SUBSTRING_INDEX(INNODB_SNAPSHOT_NAME, '/', -1), '.', 1)) AS name FROM INFORMATION_SCHEMA.SNAPSHOT_INNODB_PERSISTENT_SNAPSHOT_INDEX ORDER BY name limit 2;
name
innodb_0000000002_000001
innodb_0000000002_000002
# Select SNAPSHOT_INNODB_PERSISTENT_SNAPSHOTS
SELECT IF(RIGHT(INNODB_SNAPSHOT_KEY, 1) = '/', SUBSTRING_INDEX(SUBSTRING_INDEX(INNODB_SNAPSHOT_KEY, '/', -2), '/', 1), SUBSTRING_INDEX(SUBSTRING_INDEX(INNODB_SNAPSHOT_KEY, '/', -1), '.', 1)) AS name FROM INFORMATION_SCHEMA.SNAPSHOT_INNODB_PERSISTENT_SNAPSHOTS ORDER BY name limit 2;
name
innodb_0000000002_000001
innodb_0000000002_000002
# Select SNAPSHOT_SMARTENGINE_PERSISTENT_SNAPSHOT_INDEX
SELECT IF(RIGHT(SMARTENGINE_SNAPSHOT_NAME, 1) = '/', SUBSTRING_INDEX(SUBSTRING_INDEX(SMARTENGINE_SNAPSHOT_NAME, '/', -2), '/', 1), SUBSTRING_INDEX(SUBSTRING_INDEX(SMARTENGINE_SNAPSHOT_NAME, '/', -1), '.', 1)) AS name FROM INFORMATION_SCHEMA.SNAPSHOT_SMARTENGINE_PERSISTENT_SNAPSHOT_INDEX ORDER BY name limit 2;
name
smartengine_0000000002_000001
smartengine_0000000002_000002
# SNAPSHOT_SMARTENGINE_PERSISTENT_SNAPSHOTS
SELECT IF(RIGHT(SMARTENGINE_SNAPSHOT_KEY, 1) = '/', SUBSTRING_INDEX(SUBSTRING_INDEX(SMARTENGINE_SNAPSHOT_KEY, '/', -2), '/', 1), SUBSTRING_INDEX(SUBSTRING_INDEX(SMARTENGINE_SNAPSHOT_KEY, '/', -1), '.', 1)) AS name FROM INFORMATION_SCHEMA.SNAPSHOT_SMARTENGINE_PERSISTENT_SNAPSHOTS ORDER BY name limit 2;
name
smartengine_0000000002_000001
smartengine_0000000002_000002
INSERT INTO t1 SELECT * FROM t1;
# Wait for at least 3 snapshots to be generated 
INSERT INTO t1 SELECT * FROM t1;
# Wait for at least 4 snapshots to be generated 
INSERT INTO t1 SELECT * FROM t1;
# Wait for at least 5 snapshots to be generated 
INSERT INTO t1 SELECT * FROM t1;
# Wait for at least 6 snapshots to be generated 
# Purge persistent snapshot to timestamp
include/assert.inc [Purge consistent snapshot.]
include/assert.inc [Check results after purge.]
# Purge all persistent snapshot
include/assert.inc [Purge consistent snapshot.]
include/assert.inc [Keep the last consistent snapshot.]
# Cleanup
DROP TABLE t1;
DROP DATABASE db1;
